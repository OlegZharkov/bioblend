dist: bionic
language: python
python: "2.7"
services:
  - postgresql

stages:
  - test
  - name: deploy
    if: tag IS present

env:
  - TOX_ENV=py36 GALAXY_VERSION=dev
  - TOX_ENV=py36 GALAXY_VERSION=release_20.09
  - TOX_ENV=py36 GALAXY_VERSION=release_20.05
  - TOX_ENV=py36 GALAXY_VERSION=release_20.01
  - TOX_ENV=py36 GALAXY_VERSION=release_19.09
  - TOX_ENV=py36 GALAXY_VERSION=release_19.05
  - TOX_ENV=py36 GALAXY_VERSION=release_19.01
  - TOX_ENV=py36 GALAXY_VERSION=release_18.09
  - TOX_ENV=py36 GALAXY_VERSION=release_18.05
  - TOX_ENV=py36 GALAXY_VERSION=release_18.01
  - TOX_ENV=py36 GALAXY_VERSION=release_17.09

matrix:
  include:

    - stage: test
      env: TOX_ENV=py39 GALAXY_VERSION=dev
      addons:
        apt:
          sources:
            - deadsnakes
          packages:
            - python3.9-dev
            - python3.9-distutils
    - stage: test
      env: TOX_ENV=py38 GALAXY_VERSION=dev
      addons:
        apt:
          sources:
            - deadsnakes
          packages:
            - python3.8-dev
    - stage: test
      env: TOX_ENV=py37 GALAXY_VERSION=dev
      addons:
        apt:
          sources:
            - deadsnakes
          packages:
            - python3.7-dev
    - stage: test
      os: osx
      # Selection of Python version is not available via language: on OS X workers, see https://github.com/travis-ci/travis-ci/issues/2312
      language: generic
      env: TOX_ENV=py37 GALAXY_VERSION=dev
      before_install:
        # PostgreSQL on OSX is not started, see https://github.com/travis-ci/travis-ci/issues/1875
        - rm -rf /usr/local/var/postgres
        - initdb /usr/local/var/postgres
        - pg_ctl -D /usr/local/var/postgres start
        - createuser -s postgres

    - stage: deploy
      python: '3.7'
      env:
        - TWINE_USERNAME=__token__
        # TWINE_PASSWORD environment variable is saved in Travis CI Settings
      before_install: []
      install:
        - python3 -m pip install --upgrade pip setuptools
        - python3 -m pip install --upgrade twine wheel
      before_script: []
      script:
        - python3 setup.py sdist bdist_wheel
        - twine check dist/*
        - twine upload --skip-existing dist/*

before_install:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/7940
  - sudo rm -f /etc/boto.cfg

install:
  # Need virtualenv 20.0.14 for https://github.com/pypa/virtualenv/pull/1749
  - python -m pip install 'tox>=1.8.0' 'virtualenv>=20.0.14'

before_script:
  # Create a PostgreSQL database for Galaxy. The default SQLite3 database makes test fail randomly because of "database locked" error.
  - createdb -U postgres galaxy-travis
  # Install Galaxy
  - cd $HOME
  - wget https://github.com/galaxyproject/galaxy/archive/${GALAXY_VERSION}.tar.gz
  - tar xvzf ${GALAXY_VERSION}.tar.gz | tail
  - cd galaxy-${GALAXY_VERSION}
  - GALAXY_DIR=$PWD
  # Export GALAXY_CONFIG_FILE environment variable to be used by run_galaxy.sh
  - export GALAXY_CONFIG_FILE=config/galaxy.ini
  # Export BIOBLEND_ environment variables to be used in BioBlend tests
  - export BIOBLEND_GALAXY_MASTER_API_KEY=$(LC_ALL=C tr -dc A-Za-z0-9 < /dev/urandom | head -c 32)
  - export BIOBLEND_GALAXY_USER_EMAIL=${USER}@localhost.localdomain
  - DATABASE_CONNECTION=postgresql://postgres:@localhost/galaxy-travis
  - eval "echo \"$(cat "${TRAVIS_BUILD_DIR}/tests/template_galaxy.ini")\"" > "$GALAXY_CONFIG_FILE"
  # Update psycopg2 requirement to a version compatible with glibc 2.26 for Galaxy releases 16.01-18.01, see https://github.com/psycopg/psycopg2-wheels/issues/2
  - |
    if [ -f lib/galaxy/dependencies/conditional-requirements.txt ]; then
      sed -i.bak -e 's/psycopg2==2.6.1/psycopg2==2.7.3.1/' lib/galaxy/dependencies/conditional-requirements.txt
    fi
  # Start Galaxy and wait for successful server start
  - export GALAXY_SKIP_CLIENT_BUILD=1

script:
  - GALAXY_RUN_ALL=1 "${TRAVIS_BUILD_DIR}/run_galaxy.sh" --daemon --wait
  - export BIOBLEND_GALAXY_URL=http://localhost:8080
  - cd "${TRAVIS_BUILD_DIR}"
  - tox -e $TOX_ENV

after_failure:
  - cat ${GALAXY_DIR}/main.log
